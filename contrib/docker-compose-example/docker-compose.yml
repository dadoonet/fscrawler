version: '3'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms768m -Xmx768m"
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - fscrawler_net

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms768m -Xmx768m"
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    ports:
      - 9201:9200
    networks:
      - fscrawler_net

  kib01:
    image: docker.elastic.co/kibana/kibana:$ELASTIC_VERSION
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    restart: always
    networks:
      - fscrawler_net

  fscrawler:
    build:
      context: ${PWD}
      dockerfile: Dockerfile-fscrawler
    container_name: fscrawler
    restart: always
    volumes:
      - path_to_files_to_scan:/usr/app/data/:ro
      - ./config/:/usr/app/config/
    depends_on:
      - es01
      - es02
      - kib01
    command: [ "./wait-for-it.sh", "-h es01", "-t 30", "-p 9200" ]
    networks:
      - fscrawler_net

volumes:
  data01:
    driver: local
  data02:
    driver: local

networks:
  fscrawler_net:
    driver: bridge
