<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fr.pilato.elasticsearch.crawler</groupId>
        <artifactId>fscrawler-parent</artifactId>
        <version>2.7-SNAPSHOT</version>
    </parent>

    <artifactId>fscrawler-distribution</artifactId>
    <name>FSCrawler ZIP Distribution</name>
    <packaging>pom</packaging>

    <modules>
        <module>es7</module>
        <module>es6</module>
    </modules>

    <properties>
        <tesseract.version>3.04.*</tesseract.version>

        <!-- Global configuration parameters for docker -->
        <!-- By default, build docker images on each modules. -->
        <docker.skip>${env.DOCKER_SKIP}</docker.skip>
        <docker.verbose>build</docker.verbose>
        <docker.username>dadoonet</docker.username>
        <!-- The following assumes that each submodule will be overwritten. -->
        <module.name>es7</module.name>

        <!-- Docker Image Definitions -->
        <!-- no install tesseract-ocr and data files for any languages -->
        <docker.nolang.alias>${project.artifactId}-nolang</docker.nolang.alias>
        <docker.nolang.name>${docker.username}/fscrawler:${project.version}-${module.name}-nolang</docker.nolang.name>
        <docker.nolang.cacheFrom>${docker.nolang.name}</docker.nolang.cacheFrom>
        <docker.nolang.dockerFile>${project.basedir}/../src/main/docker/Dockerfile</docker.nolang.dockerFile>
        <docker.nolang.assembly.descriptor>${project.basedir}/../src/main/assembly/assembly.xml</docker.nolang.assembly.descriptor>
        <docker.nolang.assembly.mode>tgz</docker.nolang.assembly.mode>

        <!-- install tesseract-ocr and data files for English -->
        <docker.eng.alias>${project.artifactId}-eng</docker.eng.alias>
        <docker.eng.name>${docker.username}/fscrawler:${project.version}-${module.name}-eng</docker.eng.name>
        <docker.eng.cacheFrom>${docker.eng.name}</docker.eng.cacheFrom>
        <docker.eng.dockerFile>${docker.nolang.dockerFile}</docker.eng.dockerFile>
        <docker.eng.assembly.descriptor>${docker.nolang.assembly.descriptor}</docker.eng.assembly.descriptor>
        <docker.eng.assembly.mode>${docker.nolang.assembly.mode}</docker.eng.assembly.mode>
        <docker.eng.args.langsPkg>tesseract-ocr=${tesseract.version} tesseract-ocr-eng=${tesseract.version}</docker.eng.args.langsPkg>

        <!-- install tesseract-ocr and data files for Franch -->
        <docker.fra.alias>${project.artifactId}-fra</docker.fra.alias>
        <docker.fra.name>${docker.username}/fscrawler:${project.version}-${module.name}-fra</docker.fra.name>
        <docker.fra.cacheFrom>${docker.fra.name}</docker.fra.cacheFrom>
        <docker.fra.dockerFile>${docker.nolang.dockerFile}</docker.fra.dockerFile>
        <docker.fra.assembly.descriptor>${docker.nolang.assembly.descriptor}</docker.fra.assembly.descriptor>
        <docker.fra.assembly.mode>${docker.nolang.assembly.mode}</docker.fra.assembly.mode>
        <docker.fra.args.langsPkg>tesseract-ocr=${tesseract.version} tesseract-ocr-fra=${tesseract.version}</docker.fra.args.langsPkg>

        <!-- install tesseract-ocr and  data files for Japanese -->
        <docker.jpn.alias>${project.artifactId}-jpn</docker.jpn.alias>
        <docker.jpn.name>${docker.username}/fscrawler:${project.version}-${module.name}-jpn</docker.jpn.name>
        <docker.jpn.cacheFrom>${docker.jpn.name}</docker.jpn.cacheFrom>
        <docker.jpn.dockerFile>${docker.nolang.dockerFile}</docker.jpn.dockerFile>
        <docker.jpn.assembly.descriptor>${docker.nolang.assembly.descriptor}</docker.jpn.assembly.descriptor>
        <docker.jpn.assembly.mode>${docker.nolang.assembly.mode}</docker.jpn.assembly.mode>
        <docker.jpn.args.langsPkg>tesseract-ocr=${tesseract.version} tesseract-ocr-jpn=${tesseract.version}</docker.jpn.args.langsPkg>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>fr.pilato.elasticsearch.crawler</groupId>
            <artifactId>fscrawler-cli</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <!-- Add/Edit items in META-INF/MANIFEST.MF -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>fr.pilato.elasticsearch.crawler.fs.cli.FsCrawler</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.carrotsearch.randomizedtesting</groupId>
                <artifactId>junit4-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- There is no unit test so we can skip that execution -->
                        <id>unit-tests</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <!-- There is no integration test so we can skip that execution -->
                        <id>integration-tests</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- Generate the release zip file (run during package step) -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <configuration>
                        <appendAssemblyId>false</appendAssemblyId>
                        <descriptors>
                            <descriptor>${project.parent.basedir}/src/main/assembly/assembly.xml</descriptor>
                        </descriptors>
                    </configuration>
                    <executions>
                        <execution>
                            <id>generate-release-plugin</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Generate the docker images (run during package step) -->
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <configuration>
                        <authConfig>
                            <push>
                                <username>${docker.push.username}</username>
                                <password>${docker.push.password}</password>
                            </push>
                        </authConfig>
                        <!-- Disable configuration for IT -->
                        <images combine.self="override">
                            <image>
                                <external>
                                    <type>properties</type>
                                    <prefix>docker.nolang</prefix>
                                </external>
                            </image>
                            <image>
                                <external>
                                    <type>properties</type>
                                    <prefix>docker.eng</prefix>
                                </external>
                            </image>
                            <image>
                                <external>
                                    <type>properties</type>
                                    <prefix>docker.fra</prefix>
                                </external>
                            </image>
                            <image>
                                <external>
                                    <type>properties</type>
                                    <prefix>docker.jpn</prefix>
                                </external>
                            </image>
                        </images>
                    </configuration>
                    <executions>
                        <execution>
                            <id>docker-build</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>docker-push</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                        </execution>
                        <execution>
                            <!-- There is no integration test so we can skip that execution -->
                            <id>start-elasticsearch</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <!-- There is no integration test so we can skip that execution -->
                            <id>stop-elasticsearch</id>
                            <phase>none</phase>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
